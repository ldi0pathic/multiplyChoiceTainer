[
  {
    "QuestionText": "Wie viele Definitionen des Begriffes \u0022Softwarearchitektur\u0022 gibt es?\r\n",
    "Points": 1,
    "QuestionType": "Auswahl",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Genau eine f\u00FCr alle Arten von Systemen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Eine f\u00FCr jede Art von Softwaresystem (z. B. \u0022eingebettet\u0022, \u0022Echtzeit\u0022,",
        "IsCorrect": false
      },
      {
        "AnswerText": "Ein Dutzend oder mehr unterschiedliche Definitionen.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Welche DREI der folgenden Aspekte werden durch den Begriff \u201ESoftwarearchitektur\u201C abgedeckt?",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Komponenten",
        "IsCorrect": true
      },
      {
        "AnswerText": "Querschnittskonzepte",
        "IsCorrect": true
      },
      {
        "AnswerText": "(interne und externe) Schnittstellen",
        "IsCorrect": true
      },
      {
        "AnswerText": "Programmierkonventionen (coding conventions)",
        "IsCorrect": false
      },
      {
        "AnswerText": "Hardware-Sizing",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche VIER der folgenden Aussagen zu (Querschnitts-) Konzepten sind am zutreffendsten?",
    "Points": 2,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Ein Konzept kann durch einen einzigen Baustein umgesetzt werden.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Ein Konzept kann Einschr\u00E4nkungen f\u00FCr die Umsetzung vieler Bausteine definieren.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Konzepte sind ein Mittel zur Erh\u00F6hung der Konsistenz.",
        "IsCorrect": true
      },
      {
        "AnswerText": "F\u00FCr jedes Qualit\u00E4tsziel sollte es ein explizit dokumentiertes Konzept geben.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Eine einheitliche Ausnahmebehandlung (Exception Handling) kann man gut erreichen,indem die Architekt:innen mit den Entwickler:innen vor der Implementierung eingeeignetes Konzept vereinbaren.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Durch die Definition von geeigneten Konzepten wird die Mustertreue der Architektursichergestellt.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Durch die einheitliche Verwendung von Konzepten wird die Kopplung zwischen Bausteinen verringert.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Bei Ihrem Projekt arbeiten drei Architekt:innen und sieben Entwickler:innen an der Dokumentation der Softwarearchitektur. Welche Methoden eignen sich zur Gew\u00E4hrleistung einer konsistenten und zweckm\u00E4\u00DFigen Dokumentation und welche nicht?",
    "Points": 2,
    "QuestionType": "Kreuz",
    "Header1": "Geeignet",
    "Header2": "Nicht geeignet",
    "Answers": [
      {
        "AnswerText": "Die/der leitende Architekt:in koordiniert die Erstellung der Dokumentation.",
        "IsCorrect": true
      },
      {
        "AnswerText": "F\u00FCr die Dokumentation werden identische Vorlagen verwendet.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Alle Teile der Dokumentation werden automatisch aus dem Quellcode extrahiert.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche VIER der folgenden Techniken sind am besten zur Darstellung von Abl\u00E4ufen oder Laufzeitverhalten geeignet?",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Flussdiagramme",
        "IsCorrect": true
      },
      {
        "AnswerText": "Aktivit\u00E4tsdiagramme",
        "IsCorrect": true
      },
      {
        "AnswerText": "Darstellung von Screenflows (Abfolge von Benutzerinteraktionen)",
        "IsCorrect": false
      },
      {
        "AnswerText": "Sequenzdiagramm",
        "IsCorrect": true
      },
      {
        "AnswerText": "Lineares Venn-Diagramm",
        "IsCorrect": false
      },
      {
        "AnswerText": "Nummerierte Liste aufeinanderfolgender Schritte",
        "IsCorrect": true
      },
      {
        "AnswerText": "Tabellarische Schnittstellenbeschreibung",
        "IsCorrect": false
      },
      {
        "AnswerText": "Klassendiagramme",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche DREI der folgenden Grunds\u00E4tze gelten f\u00FCr das Testen?",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Im Allgemeinen ist es nicht m\u00F6glich, s\u00E4mtliche Fehler eines Systems zu finden.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Bei Komponenten mit vielen bekannten vorherigen Fehlern sind die Chancen f\u00FCr zus\u00E4tzliche Fehler hoch.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Durch ausreichendes Testen kann aufgezeigt werden, dass ein Programm fehlerfrei ist.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Durch Testen kann nur die Existenz von Fehlern aufgezeigt werden, nicht jedoch ihre Abwesenheit",
        "IsCorrect": true
      },
      {
        "AnswerText": "Die funktionale Programmierung erlaubt keine automatisierten Tests.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche der folgenden Aussagen zum Entwurfsprinzip \u0022Information Hiding\u0022 sind richtig und welche falsch?",
    "Points": 1,
    "QuestionType": "Kreuz",
    "Header1": "Richtig",
    "Header2": "Falsch",
    "Answers": [
      {
        "AnswerText": "Durch die Befolgung des Prinzips \u0022Information Hiding\u0022 wird die Flexibilit\u00E4t f\u00FCr \u00C4nderungen erh\u00F6ht.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Beim Information Hiding werden absichtlich Informationen vor Aufrufern oder Konsumenten des Bausteins verborgen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Information Hiding erschwert das Bottom-Up Vorgehen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Information Hiding ist abgeleitet vom Ansatz der inkrementellen Verfeinerung entlang des Kontrollflusses.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Was sind die ZWEI wichtigsten Ziele von Softwarearchitektur?",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Verbesserung der Genauigkeit von Mustern in Struktur und Implementierung.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Erreichung der Qualit\u00E4tsanforderungen auf nachvollziehbare Weise.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Erm\u00F6glichung von kosteneffizienten Integrations- und Abnahmetests des Systems.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Erm\u00F6glichung eines grundlegenden Verst\u00E4ndnisses der Strukturen und Konzepte f\u00FCr das Entwicklungsteam und andere Beteiligte.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Stellen Sie sich vor, Sie sind Softwarearchitekt:in f\u00FCr eine gro\u00DFe und verteilte Gesch\u00E4ftsanwendung im Banken- oder Versicherungsbereich. Welche der folgenden Aussagen sind f\u00FCr diese Situation richtig und welche falsch?",
    "Points": 1,
    "QuestionType": "Kreuz",
    "Header1": "Richtig",
    "Header2": "Falsch",
    "Answers": [
      {
        "AnswerText": "Ihre Architektur sollte so aufgebaut sein, dass h\u00E4ufig vorkommende \u00C4nderungen an den entsprechenden Gesch\u00E4ftsprozessen ohne umfangreiche Umstrukturierungen der Softwarearchitektur m\u00F6glich sind.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Erforderliche Produktqualit\u00E4ten sollten Ihre architektonischen Entscheidungen leiten.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Die Softwarearchitektur kann v\u00F6llig unabh\u00E4ngig von Hardware und Infrastruktur entworfen werden.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Was sind Ihre DREI wichtigsten Verantwortlichkeiten als Softwarearchitekt:in in Bezug auf Anforderungen?",
    "Points": 2,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Unterst\u00FCtzung der Fachexpert:innen dabei, Qualit\u00E4tsanforderungen konkret und explizit zu formulieren.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Hilfe bei der Identifizierung von neuen Gesch\u00E4ftsm\u00F6glichkeiten anhand Ihres technischen Know-hows.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Ablehnung von Anforderungen, die technische Risiken enthalten.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Umformulierung aller Gesch\u00E4ftsanforderungen, so dass sie f\u00FCr Ihr Entwicklungsteam verst\u00E4ndlich sind.",
        "IsCorrect": false
      },
      {
        "AnswerText": "\u00DCberpr\u00FCfung der Anforderungen auf technische Machbarkeit.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Sie sind als Architekt:in daf\u00FCr zust\u00E4ndig, ein Altsystem entsprechend den laufenden Betriebsanforderungen am Laufen zu halten. Was sind Ihre DREI wichtigsten Aufgaben?",
    "Points": 2,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Verhandlung des Wartungsbudgets f\u00FCr Ihr Team",
        "IsCorrect": false
      },
      {
        "AnswerText": "Sicherstellung einer aktuellen Dokumentation des ausgelieferten Systems",
        "IsCorrect": true
      },
      {
        "AnswerText": "Analyse der Auswirkungen von neuen Anforderungen auf das aktuelle System",
        "IsCorrect": true
      },
      {
        "AnswerText": "Ermunterung der Teammitglieder, neue Programmiersprachen zu lernen",
        "IsCorrect": false
      },
      {
        "AnswerText": "Ihren Vorgesetzten technologische Updates zus\u00E4tzlich zu den Gesch\u00E4ftsanforderungen vorschlagen",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Welche der folgenden Aussagen zu Architekturentscheidungen sind wahr, welche falsch?",
    "Points": 1,
    "QuestionType": "Kreuz",
    "Header1": "Wahr",
    "Header2": "Falsch",
    "Answers": [
      {
        "AnswerText": "Architekturentscheidungen m\u00FCssen nie aufgeschrieben werden, da diese bereits dem Entwicklungsteam bekannt sind.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Architecture Decision Records helfen dabei, Entscheidungen in ihrem Kontext nachzuvollziehen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Nachdem man sich f\u00FCr ein zentrales Framework (z.B. Persistenzframework) entschieden hat, darf diese Entscheidung nicht mehr ge\u00E4ndert werden.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Qualit\u00E4tsanforderungen helfen ma\u00DFgeblich bei Architekturentscheidungen.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Geben Sie f\u00FCr jede der folgenden Aussagen an, ob sie richtig oder falsch ist.",
    "Points": 1,
    "QuestionType": "Kreuz",
    "Header1": "richtig",
    "Header2": "falsch",
    "Answers": [
      {
        "AnswerText": "Jede Iteration eines agilen Entwicklungsvorgehens kann Auswirkungen auf architektonische Grundsatzentscheidungen haben.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Der Gesamtaufwand f\u00FCr Architekturarbeit ist bei iterativen Projekten wesentlich h\u00F6her als bei Wasserfall-Projekten.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Agile Projekte ben\u00F6tigen keine Architekturdokumente, da das Entwicklungsteam in t\u00E4glichen Standup-Meetings Entscheidungen kommuniziert.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Wenn Ihr System aus einer Reihe von Microservices besteht, ist kein zentrales Architekturdokument erforderlich, da jeder Service seine Technologien ausw\u00E4hlen kann.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Geben Sie an, welche der folgenden Aussagen zu Projektzielen und Architekturzielen richtig und welche falsch sind.",
    "Points": 2,
    "QuestionType": "Kreuz",
    "Header1": "Richtig",
    "Header2": "Falsch",
    "Answers": [
      {
        "AnswerText": "Projektziele k\u00F6nnen funktionale Anforderungen sowie Qualit\u00E4tsanforderungen umfassen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Architekturziele leiten sich von den Qualit\u00E4tsanforderungen f\u00FCr das System oder Produkt ab.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Stakeholder aus dem Business sollten sich auf Gesch\u00E4ftsziele konzentrieren und sich nicht mit Architekturzielen auseinandersetzen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Zur Vermeidung von Konflikten sollten Gesch\u00E4fts- und Architekturziele einander nicht \u00FCberlappen.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Was bedeutet die Regel \u201Eexplizit, nicht implizit\u201C f\u00FCr die Architekturarbeit? W\u00E4hlen Sie die ZWEI passendsten Antworten aus.",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Architekt:innen sollten rekursive Strukturen vermeiden und durch explizite Schleifen ersetzen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Architekt:innen sollten die Annahmen, die zu Entscheidungen f\u00FChren, explizit machen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Architekt:innen sollten explizit auf Erl\u00E4uterungen (d.h. Kommentare) in nat\u00FCrlicher Sprache f\u00FCr jeden Baustein bestehen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Architekt:innen sollten explizit auf schriftlichen oder zumindest m\u00FCndlichen Begr\u00FCndungen f\u00FCr Aufwandsch\u00E4tzungen der Entwicklung von ihrem Team bestehen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Architekt:innen sollten die Voraussetzungen f\u00FCr ihre Entscheidungen explizit darlegen.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Kreuzen Sie die DREI zutreffendsten Beispiele f\u00FCr typische Kategorien von Softwaresystemen an.",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Batch-System",
        "IsCorrect": true
      },
      {
        "AnswerText": "Interaktives Online-System",
        "IsCorrect": true
      },
      {
        "AnswerText": "Linn\u00E9s-System.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Eingebettetes Echtzeitsystem.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Integrationstestsystem",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Es gibt zahlreiche Ans\u00E4tze, die zu einer Softwarearchitektur f\u00FChren. Welche DREI der folgenden Ans\u00E4tze kommen in der Praxis am h\u00E4ufigsten vor?",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "User-Interface Driven Design",
        "IsCorrect": false
      },
      {
        "AnswerText": "Domain-driven Design",
        "IsCorrect": true
      },
      {
        "AnswerText": "Sichtenbasierte Architekturentwicklung",
        "IsCorrect": true
      },
      {
        "AnswerText": "Bottom-up Design",
        "IsCorrect": true
      },
      {
        "AnswerText": "Mehrheitsentscheid",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Diverse Architekturentwicklungsmethoden schlagen einen sichtenbasierten Ansatz vor. Welche DREI der folgenden Sichten werden am h\u00E4ufigsten verwendet?",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Physische Datenbanksicht",
        "IsCorrect": false
      },
      {
        "AnswerText": "Kontextsicht",
        "IsCorrect": true
      },
      {
        "AnswerText": "Bausteinsicht oder Komponentensicht",
        "IsCorrect": true
      },
      {
        "AnswerText": "Testbasierte Sicht",
        "IsCorrect": false
      },
      {
        "AnswerText": "Konfigurationssicht",
        "IsCorrect": false
      },
      {
        "AnswerText": "Laufzeitsicht",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Sie dokumentieren einen Baustein einer Softwarearchitektur. Welche ZWEI Informationen sollten in seiner Black-Box-Beschreibung enthalten sein?",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "\u00D6ffentliche Schnittstellen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Verantwortlichkeiten des Bausteins.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Interne Struktur des Bausteins.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Spezifikation von Implementierungsdetails.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche Voraussetzungen m\u00FCssen vor der Entwicklung einer Softwarearchitektur erf\u00FCllt sein? W\u00E4hlen Sie die ZWEI passendsten Antworten aus.",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Die Anforderungsspezifikation f\u00FCr das System ist vollst\u00E4ndig, detailliert und konsistent.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Die wichtigsten Qualit\u00E4tsanforderungen an das System sind bekannt.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Die organisatorischen Randbedingungen sind bekannt.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Die Programmiersprache wurde ausgew\u00E4hlt.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Die Hardware f\u00FCr das Entwicklungsteam ist verf\u00FCgbar.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche Faktoren k\u00F6nnen den Entwurf einer Softwarearchitektur beeinflussen? W\u00E4hlen Sie die DREI passendsten Antworten aus.",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Politische.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Organisatorische.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Technische.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Virtuelle.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche der folgenden Eigenschaften l\u00E4sst sich am ehesten durch eine Schichtenarchitektur verbessern?",
    "Points": 1,
    "QuestionType": "Auswahl",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Laufzeiteffizienz (Performance).",
        "IsCorrect": false
      },
      {
        "AnswerText": "Flexibilit\u00E4t bei der Modifizierung oder \u00C4nderung des Systems.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Flexibilit\u00E4t bei der Laufzeit (Konfigurierbarkeit).",
        "IsCorrect": false
      },
      {
        "AnswerText": "Nichtabstreitbarkeit.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "F\u00FCr welche ZWEI Entwurfsprobleme bietet das Pipes \u0026 Filter Pattern L\u00F6sungsans\u00E4tze?",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Verwaltung von globalem Anwendungszustand",
        "IsCorrect": false
      },
      {
        "AnswerText": "Strukturierung von IT-Systemen die Datenstr\u00F6me verarbeiten",
        "IsCorrect": true
      },
      {
        "AnswerText": "Entkopplung von Verarbeitungsschritten",
        "IsCorrect": true
      },
      {
        "AnswerText": "Entkopplung von zeitlichen Abh\u00E4ngigkeiten",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche Ziele versuchen Sie mit dem Dependency-Inversion-Prinzip zu erreichen?",
    "Points": 1,
    "QuestionType": "Auswahl",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Gro\u00DFe Bausteine sollen nicht von kleinen Bausteinen abh\u00E4ngen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Komponenten sollen in der Lage sein, abh\u00E4ngige Komponenten leichter zu erstellen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Bausteine sollen nur \u00FCber Abstraktionen voneinander abh\u00E4ngen.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Was sind die Eigenschaften von enger (hoher) bzw. loser (niedriger) Kopplung?",
    "Points": 1,
    "QuestionType": "Kreuz",
    "Header1": "enge Kopplung",
    "Header2": "lose Kopplung",
    "Answers": [
      {
        "AnswerText": "Bausteine k\u00F6nnen abh\u00E4ngige Bausteine direkt, d.h. ohne Umwege \u00FCber Schnittstellen oder Abstraktionen, aufrufen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Bausteine verwenden gemeinsame komplexe Datenstrukturen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Bausteine verwenden eine gemeinsame Tabelle (f\u00FCr Schreib- und Leseoperationen) innerhalb einer relationalen Datenbank.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Beim Baustein-Design haben Sie das Dependency- Inversion-Prinzip konsequent umgesetzt.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche ZWEI Aussagen zum \u201EDon\u2019t repeat yourself\u201D-Prinzip (DRY) treffen am ehesten zu? Anders gesagt: Was k\u00F6nnte passieren, wenn Teile des Quellcodes oder der Konfiguration im System mehrfach vorhanden sind?",
    "Points": 2,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "DRY verringert die Sicherheit.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Die strenge Einhaltung von DRY k\u00F6nnte zu h\u00F6herer Kopplung f\u00FChren.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Die Komponenten des Systems mit redundantem Code k\u00F6nnen unabh\u00E4ngig voneinander verbessert werden.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Die Einhaltung von DRY f\u00FChrt zu einer Verringerung der Angriffsvektoren in der ITSicherheit.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Die Anwendung der Schichtenmuster erm\u00F6glicht eine konsistente Anwendung des DRY-Prinzips.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Sie k\u00F6nnen Aspekte Ihrer Softwarearchitektur m\u00FCndlich und/oder schriftlich kommunizieren. In welchem Zusammenhang stehen diese M\u00F6glichkeiten zueinander? Geben Sie f\u00FCr jede der folgenden Aussagen an, ob sie richtig oder falsch ist.",
    "Points": 2,
    "QuestionType": "Kreuz",
    "Header1": "Richtig",
    "Header2": "Falsch",
    "Answers": [
      {
        "AnswerText": "M\u00FCndliche Kommunikation sollte schriftliche Dokumentation erg\u00E4nzen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Feedback zu Architekturentscheidungen sollte zur Sicherstellung der Nachverfolgbarkeit grunds\u00E4tzlich schriftlich erfolgen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Schriftliche Dokumentation sollte immer m\u00FCndlicher Kommunikation vorausgehen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Architekt:innen sollten sich eine Variante (m\u00FCndlich oder schriftlich) aussuchen und w\u00E4hrend der gesamten Entwicklung dabei bleiben.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche der folgenden Aussagen zu Notationen f\u00FCr Architektursichten sind richtig und welche falsch?",
    "Points": 2,
    "QuestionType": "Kreuz",
    "Header1": "wahr",
    "Header2": "falsch",
    "Answers": [
      {
        "AnswerText": "Business Process Model \u0026 Notation (BPMN) sollte nur von Business-Analysten und nicht zur Architekturdokumentation verwendet werden.",
        "IsCorrect": false
      },
      {
        "AnswerText": "UML-Verteilungsdiagramme sind die einzige M\u00F6glichkeit zur Dokumentation des Mappings der Softwarekomponenten in Bezug auf die Infrastruktur.",
        "IsCorrect": false
      },
      {
        "AnswerText": "UML-Paketdiagramme k\u00F6nnen zum Festhalten der Bausteinsicht der Softwarearchitektur verwendet werden.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Solange die Notation (z. B. mithilfe einer Legende) erl\u00E4utert wird, kann eine beliebige Notation ausreichen, um Bausteinstrukturen und Zusammenarbeit zu beschreiben.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Welche ZWEI Architektursichten haben die beste praktische Anwendung f\u00FCr die Entwicklung von Softwarearchitekturen?",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Pattern-Sicht.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Beobachtersicht (Observer-View).",
        "IsCorrect": false
      },
      {
        "AnswerText": "Bausteinsicht (Komponentensicht).",
        "IsCorrect": true
      },
      {
        "AnswerText": "Verteilungssicht.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "In der Kontextsicht k\u00F6nnen Sie einen gesch\u00E4ftlichen Kontext (\u201Ebusiness context\u201C) und einen technischen Kontext verwenden. W\u00E4hlen Sie die ZWEI am besten passenden Antworten f\u00FCr den technischen Kontext aus.",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Der technische Kontext enth\u00E4lt die physischen \u00DCbertragungskan\u00E4le zwischen Ihrem System und der Umgebung.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Der technische Kontext enth\u00E4lt die gesamte Infrastruktur, \u00FCber die die Komponenten Ihres Systems verteilt werden.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Der technische Kontext sollte die Hardware-Preisliste oder die Preisgestaltung von Cloud-Diensten, die als Infrastruktur f\u00FCr Ihre Architektur verwendet werden, enthalten.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Der technische Kontext enth\u00E4lt Informationen zur gew\u00E4hlten Programmiersprache sowie allen zur Implementierung Ihrer Softwarearchitektur verwendeten Frameworks.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Der technische Kontext enth\u00E4lt gegebenenfalls andere Elemente als der Gesch\u00E4ftskontext (\u0022business context\u0022).",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Die Dokumentation der Softwarearchitektur sollte Beschreibungen der Querschnittskonzepte enthalten. W\u00E4hlen Sie die ZWEI besten Gr\u00FCnde, warum die Dokumentation von Querschnittskonzepten sinnvoll ist.",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Querschnittskonzepte sollten sich auf die Fachdom\u00E4ne konzentrieren und frei von technischen Informationen sein.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Aspekte oder Konzepte, die in mehreren Teilen Ihrer Softwarearchitektur verwendet werden, sollten auf nicht redundante Weise beschrieben werden.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Querschnittskonzepte k\u00F6nnen in weiteren Produkten innerhalb der gleichen Organisation erneut verwendet werden",
        "IsCorrect": true
      },
      {
        "AnswerText": "Querschnittskonzepte sollten von Spezialist:innen implementiert werden. Daher ist eine separate Dokumentation hilfreich.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Was sind Richtlinien f\u00FCr ein gutes Schnittstellen-Design? Kreuzen Sie an, welche der folgenden Aussagen richtig und welche falsch sind.",
    "Points": 2,
    "QuestionType": "Kreuz",
    "Header1": "richtig",
    "Header2": "falsch",
    "Answers": [
      {
        "AnswerText": "Die Verwendung der Schnittstellen sollte einfach zu erlernen sein.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Es soll m\u00F6glich sein, angemessen verst\u00E4ndlichen Client- Code f\u00FCr diese Schnittstelle zu schreiben.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Eine Schnittstelle soll Zugriff auf eine umfassende Menge von Implementierungsdetails erm\u00F6glichen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Schnittstellenspezifikationen sollten funktionale und nichtfunktionale Aspekte enthalten.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Lokale und entfernte (\u0022remote\u0022) Aufrufe einer Schnittstelle sollen sich in allen Belangen identisch verhalten.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Eine Definition lautet: \u201ESoftwarearchitektur ist die Summe aller w\u00E4hrend der Entwicklung gef\u00E4llten Entscheidungen\u201C. Kreuzen Sie an, welche der folgenden Aussagen zu Architektur- /Designentscheidungen richtig und welche falsch sind.",
    "Points": 1,
    "QuestionType": "Kreuz",
    "Header1": "richtig",
    "Header2": "falsch",
    "Answers": [
      {
        "AnswerText": "Architektonische Entscheidungen k\u00F6nnen sich in der Struktur der Bausteine oder Komponenten niederschlagen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Softwarearchitekt:innen sollten alle Entwurfsentscheidungen schriftlich begr\u00FCnden.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Architektonische Entscheidungen k\u00F6nnen untereinander Wechselwirkungen haben.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Kompromisse zwischen zueinander in Konflikt stehenden Qualit\u00E4tsanforderungen sollten explizite Entscheidungen sein.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Welche der folgenden Aussagen sind typische Gr\u00FCnde zur Einf\u00FChrung einer Architekturdokumentation und welche nicht?",
    "Points": 2,
    "QuestionType": "Kreuz",
    "Header1": "typisch",
    "Header2": "nicht typisch",
    "Answers": [
      {
        "AnswerText": "Unterst\u00FCtzung des Onboardings neuer Entwickler:innen.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Unterst\u00FCtzung der Testautomatisierung des Systems.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Unterst\u00FCtzung der Arbeit von verteilten Teams.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Unterst\u00FCtzung von sp\u00E4teren Verbesserungen des Systems.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Einhaltung regulatorischer Vorgaben.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Sicherstellung der gleichm\u00E4\u00DFigen Auslastung des Teams.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Welche der folgenden Eigenschaftspaare stehen \u00FCblicherweise miteinander in Konflikt und welche nicht?",
    "Points": 1,
    "QuestionType": "Kreuz",
    "Header1": "Konflikt",
    "Header2": "Kein Konflikt",
    "Answers": [
      {
        "AnswerText": "Verst\u00E4ndlichkeit \u2013 Lesbarkeit.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Benutzerfreundlichkeit \u2013 Sicherheit.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Laufzeitkonfigurierbarkeit \u2013 Robustheit.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Sicherheit \u2013 Funktionale Korrektheit.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "ISO 25010 enth\u00E4lt allgemeine Qualit\u00E4tseigenschaften f\u00FCr Softwaresysteme. Wie k\u00F6nnen Qualit\u00E4tsanforderungen zu diesen Eigenschaften konkretisiert werden? W\u00E4hlen Sie die ZWEI besten Alternativen aus.",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Durch Entwickeln von UI-Prototypen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Durch Definieren expliziter Schnittstellen.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Durch Erstellen, verfassen oder diskutieren von Szenarien.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Durch Erstellen automatisierter Tests.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Durch Erstellen eines Qualit\u00E4tsbaums.",
        "IsCorrect": true
      }
    ]
  },
  {
    "QuestionText": "Welche VIER der folgenden Punkte sind am besten geeignet, die Analyse der Erreichung der Qualit\u00E4tsanforderungen (qualitative Analyse) Ihrer Softwarearchitektur zu unterst\u00FCtzen?",
    "Points": 2,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Quantitative Abh\u00E4ngigkeitsanalyse.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Architekturmodelle.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Qualit\u00E4tsszenarien.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Teamgr\u00F6\u00DFe.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Logdateien.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Organigramm.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Sie versuchen, Ihre Architektur qualitativ zu analysieren. Was sind die ZWEI zutreffendsten Anzeichen f\u00FCr architektonische Problembereiche?",
    "Points": 2,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Hohe Kopplung der Komponenten.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Namen \u00F6ffentlicher Methoden geben nicht deren Zweck wieder.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Fehlende Kommentare.",
        "IsCorrect": false
      },
      {
        "AnswerText": "H\u00E4ufung von Fehlern in bestimmten Bausteinen des Systems.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Anzahl der Testf\u00E4lle pro Komponente.",
        "IsCorrect": false
      }
    ]
  },
  {
    "QuestionText": "Sie versuchen, ihre Architektur quantitativ zu untersuchen. Welche der folgenden Gr\u00F6\u00DFen k\u00F6nnen Sie f\u00FCr Ihre Softwarearchitektur zuverl\u00E4ssig messen? W\u00E4hlen Sie die DREI am besten passenden Antworten aus.",
    "Points": 1,
    "QuestionType": "Pick",
    "Header1": "",
    "Header2": "",
    "Answers": [
      {
        "AnswerText": "Gr\u00F6\u00DFe der Bausteine (z. B. Lines-of-Code).",
        "IsCorrect": true
      },
      {
        "AnswerText": "\u00C4nderungsrate des Quellcodes der Komponenten.",
        "IsCorrect": true
      },
      {
        "AnswerText": "Koh\u00E4sion der Architekturkomponenten.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Sicherheitsstufe einer Komponente.",
        "IsCorrect": false
      },
      {
        "AnswerText": "Anzahl der Personen, die zu einer bestimmten Komponente beigetragen haben.",
        "IsCorrect": true
      }
    ]
  }
]